-- MySQL Script generated by MySQL Workbench
-- Tue Dec  1 14:55:41 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lojaSimples
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lojaSimples
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lojaSimples` DEFAULT CHARACTER SET utf8 ;
USE `lojaSimples` ;

-- -----------------------------------------------------
-- Table `lojaSimples`.`Loja`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Loja` (
  `idLoja` INT NOT NULL AUTO_INCREMENT,
  `lojaVendas` INT UNSIGNED NULL,
  PRIMARY KEY (`idLoja`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Departamento` (
  `idDepartamento` INT NOT NULL AUTO_INCREMENT,
  `depVendas` INT UNSIGNED NULL DEFAULT 0,
  `depCusto` FLOAT(2) NOT NULL DEFAULT 0,
  `depGanho` FLOAT(2) NOT NULL DEFAULT 0,
  `depLucro` FLOAT(2) NOT NULL DEFAULT 0,
  `Loja_idLoja` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idDepartamento`),
  INDEX `fk_Departamento_Loja1_idx` (`Loja_idLoja` ASC) VISIBLE,
  CONSTRAINT `fk_Departamento_Loja1`
    FOREIGN KEY (`Loja_idLoja`)
    REFERENCES `lojaSimples`.`Loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Funcionario` (
  `idFuncionario` INT NOT NULL AUTO_INCREMENT,
  `Funcionariocol` VARCHAR(45) NULL,
  `Loja_idLoja` INT NOT NULL,
  `Departamento_idDepartamento` INT NOT NULL,
  PRIMARY KEY (`idFuncionario`),
  INDEX `fk_Funcionario_Loja_idx` (`Loja_idLoja` ASC) VISIBLE,
  INDEX `fk_Funcionario_Departamento1_idx` (`Departamento_idDepartamento` ASC) VISIBLE,
  CONSTRAINT `fk_Funcionario_Loja`
    FOREIGN KEY (`Loja_idLoja`)
    REFERENCES `lojaSimples`.`Loja` (`idLoja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Funcionario_Departamento1`
    FOREIGN KEY (`Departamento_idDepartamento`)
    REFERENCES `lojaSimples`.`Departamento` (`idDepartamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Produto` (
  `idProduto` INT NOT NULL AUTO_INCREMENT,
  `prodValor` FLOAT(2) UNSIGNED NOT NULL DEFAULT 0.00,
  `prodEstoque` INT UNSIGNED NOT NULL,
  `prodVendas` INT UNSIGNED NULL DEFAULT 0,
  `prodCusto` FLOAT(2) UNSIGNED NOT NULL DEFAULT 0,
  `prodCustoAcum` FLOAT UNSIGNED NOT NULL DEFAULT 0,
  `prodGanhoAcum` FLOAT UNSIGNED NOT NULL DEFAULT 0,
  `prodLucro` FLOAT NOT NULL DEFAULT 0,
  `Departamento_idDepartamento` INT NOT NULL,
  PRIMARY KEY (`idProduto`),
  INDEX `fk_Produto_Departamento1_idx` (`Departamento_idDepartamento` ASC) VISIBLE,
  CONSTRAINT `fk_Produto_Departamento1`
    FOREIGN KEY (`Departamento_idDepartamento`)
    REFERENCES `lojaSimples`.`Departamento` (`idDepartamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `salarioCliente` FLOAT UNSIGNED NOT NULL DEFAULT 0,
  `gastoCliente` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Venda` (
  `idVenda` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Quantidade` INT UNSIGNED NULL DEFAULT 0,
  `vendaValor` FLOAT UNSIGNED NULL DEFAULT 0,
  `Departamento` INT UNSIGNED NOT NULL DEFAULT 0,
  `prodLucro` FLOAT NOT NULL DEFAULT 0,
  `Produto_idProduto` INT NOT NULL DEFAULT 1,
  `Cliente_idCliente` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`idVenda`),
  INDEX `fk_Cliente_has_Produto_Produto1_idx` (`Produto_idProduto` ASC) VISIBLE,
  INDEX `fk_Cliente_has_Produto_Cliente1_idx` (`Cliente_idCliente` ASC) VISIBLE,
  CONSTRAINT `fk_Cliente_has_Produto_Cliente1`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `lojaSimples`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cliente_has_Produto_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `lojaSimples`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lojaSimples`.`Aquisicao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lojaSimples`.`Aquisicao` (
  `idAquisicao` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Quantidade` INT NOT NULL DEFAULT 0,
  `Produto_idProduto` INT NOT NULL,
  PRIMARY KEY (`idAquisicao`),
  INDEX `fk_Aquisicao_Produto1_idx` (`Produto_idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_Aquisicao_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `lojaSimples`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `lojaSimples`;

DELIMITER $$
USE `lojaSimples`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lojaSimples`.`Produto_AFTER_UPDATE` AFTER UPDATE ON `Produto` FOR EACH ROW
BEGIN
	update departamento set depVendas = depVendas + (NEW.prodVendas - OLD.prodVendas)
    where departamento.idDepartamento = NEW.Departamento_idDepartamento;
    
    /*update venda set vendaValor = NEW.prodValor*Quantidade
    where venda.Produto_idProduto = NEW.idProduto;*/
    
	/*
    Criar Entidade Aquisição
    
    update departamento set depCusto = depCusto + prodEstoque*NEW.prodCusto
    where departamento.idDepartamento = NEW.Departamento_idDepartamento;
    
	update departamento set depGanho = depGanho + NEW.prodVendas*NEW.prodValor
    where departamento.idDepartamento = NEW.Departamento_idDepartamento;*/

END$$

USE `lojaSimples`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lojaSimples`.`Venda_AFTER_INSERT` AFTER INSERT ON `Venda` FOR EACH ROW
BEGIN
	update produto set prodEstoque = prodEstoque - NEW.Quantidade
    where produto.idProduto = NEW.Produto_idProduto;
    
	update produto set prodVendas = prodVendas + NEW.Quantidade
    where produto.idProduto = NEW.Produto_idProduto;
    
	update cliente set gastoCliente = gastoCliente + NEW.vendaValor
    where idCliente=NEW.Cliente_idCliente;
    
	update produto set prodGanhoAcum = prodVendas*prodValor
    where produto.idProduto = NEW.Produto_idProduto;
    
    update produto set prodLucro = prodGanhoAcum-prodCustoAcum
    where produto.idProduto = NEW.Produto_idProduto;    

END$$

USE `lojaSimples`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lojaSimples`.`Aquisicao_AFTER_INSERT` AFTER INSERT ON `Aquisicao` FOR EACH ROW
BEGIN
	update produto set prodEstoque = prodEstoque + NEW.Quantidade
    where produto.idProduto = NEW.Produto_idProduto;
    
    update produto set prodCustoAcum = prodCustoAcum+NEW.Quantidade*prodCusto
    where produto.idProduto = NEW.Produto_idProduto;
    
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
